spring.application.name=authentication-oauth2-resource-server-keycloak-opaque-token
server.port=8080
# security with keycloak==============================================================
# JwtToken
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8989/realms/springbootrealm
# OpaqueToken
spring.security.oauth2.resourceserver.opaquetoken.client-id=springbootclientid
spring.security.oauth2.resourceserver.opaquetoken.client-secret=R1cF3HJYRlOeyj6bBs8JTrCsft2MhJxX
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=\
  http://localhost:8989/realms/springbootrealm/protocol/openid-connect/token/introspect

# =====================================================================================
#h2-db
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
spring.datasource.url=jdbc:h2:mem:restapi
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.sql.init.mode=always
#spring.sql.init.platform=h2
#spring.jpa.hibernate.ddl-auto=none
#spring.sql.init.schema-locations=sql/schema.sql
#spring.sql.init.data-locations=sql/custom-data.sql
# logging
#logging.level.ROOT=trace
logging.level.org.springframework.security=trace
logging.level.org.springframework.orm.jpa=trace
logging.level.org.springframework.transaction=trace
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=trace
logging.pattern.console=\
  %magenta(>>>%d{yyyy-MM-dd HH:mm:SSSS}) \
  %boldYellow(__PID=${PID}__) %boldBlue([Thread-Name:''%thread'']) \
  %highlight(%-5level) %boldCyan(%logger.%M) %magenta(:::) \
  %boldGreen(_____[{{{%n %msg %n}}}]_____%n)
#/////////////////////////DataSource-Proxy///////////////////////////////////
##############################<artifactId>datasource-proxy-spring-boot-starter</artifactId>
logging.level.net.ttddyy.dsproxy.listener=debug
### One of logging libraries (slf4j, jul, common, sysout)
#decorator.datasource.datasource-proxy.logging=slf4j
#decorator.datasource.datasource-proxy.query.enable-logging=true
#decorator.datasource.datasource-proxy.query.log-level=debug
# Formats the SQL for better readability. Uses Hibernate's formatter if present on the class path.
# If you opted in for a different JPA provider you need to add https://github.com/vertical-blank/sql-formatter
# as a runtime dependency to your app  to enable this.
# Mutually exclusive with json-format=true
decorator.datasource.datasource-proxy.multiline=true
decorator.datasource.datasource-proxy.format-sql=true
#decorator.datasource.datasource-proxy.json-format=true
# Enable Query Metrics
#decorator.datasource.datasource-proxy.count-query=true
